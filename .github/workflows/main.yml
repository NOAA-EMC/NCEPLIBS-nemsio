name: Build and Test
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      FC: gfortran-9
      CC: gcc-9

    steps:

    - name: install-mpi
      run: |
        sudo apt-get install libmpich-dev

    - name: checkout-pfunit
      uses: actions/checkout@v2
      with:
        repository: Goddard-Fortran-Ecosystem/pFUnit
        path: pfunit

    - name: cache-pfunit
      id: cache-pfunit
      uses: actions/cache@v2
      with:
        path: ~/pfunit
        key: pfunit-${{ runner.os }}-${{ hashFiles('pfunit/VERSION') }}

    - name: build-pfunit
      if: steps.cache-pfunit.outputs.cache-hit != 'true'
      run: |
        cd pfunit
        mkdir build
        cd build
        cmake .. -DSKIP_MPI=YES -DSKIP_ESMF=YES -DSKIP_FHAMCREST=YES -DCMAKE_INSTALL_PREFIX=~/pfunit
        make -j2
        make install

    - name: checkout-bacio
      uses: actions/checkout@v2
      with:
        repository: NOAA-EMC/NCEPLIBS-bacio
        path: bacio
        ref: develop

    - name: cache-bacio
      id: cache-bacio
      uses: actions/cache@v2
      with:
        path: ~/bacio
        key: bacio-${{ runner.os }}-${{ hashFiles('bacio/VERSION') }}

    - name: build-bacio
      if: steps.cache-bacio.outputs.cache-hit != 'true'
      run: |
        cd bacio
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=~/bacio
        make -j2
        make install

    - name: checkout-w3nco
      uses: actions/checkout@v2
      with:
        repository: NOAA-EMC/NCEPLIBS-w3nco
        path: w3nco
        ref: develop

    - name: cache-w3nco
      id: cache-w3nco
      uses: actions/cache@v2
      with:
        path: ~/w3nco
        key: w3nco-${{ runner.os }}-${{ hashFiles('w3nco/VERSION') }}

    - name: build-w3nco
      if: steps.cache-w3nco.outputs.cache-hit != 'true'
      run: |
        cd w3nco
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=~/w3nco
        make -j2
        make install

    - name: checkout
      uses: actions/checkout@v2
      with: 
        path: nemsio
        submodules: true

    - name: build
      run: |
        cd nemsio
        mkdir build 
        cd build
        cmake .. -DENABLE_TESTS=ON -DCMAKE_PREFIX_PATH="~/pfunit;~/"
        make -j2
    
    - name: test
      run: |
        cd $GITHUB_WORKSPACE/nemsio/build
        make test